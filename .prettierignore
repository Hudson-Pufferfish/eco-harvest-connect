node_modules/
dist/

##############################################
# some spotify config below
.docker/config.json
.typescript-cache
allure-*/
services/**/build
tools/licenses/build
tools/webpack/.webpack-dev-server-output
**/generated-locales
locales/*.yml
!locales/shared/en.yml
LocalPackages/i18n/__generated__/*
pnpm-lock.yaml

# Binaries installed by CI scripts
teamcity/binaries/

# Files updated during release branch off
tingle-build-cache-version.yaml

# TypeScript code that is auto-generated using our 'proto2ts' tool should be ignored.
# Such code will by convention live in a path matching the below pattern.
shared/src/lib/**/proto/**

# This folder shouldn't really contain files that Prettier cares about, but it
# could have files with matching extensions if a branch name is for example
# `my-branch-for-file.js` (that would create
# `.git/refs/heads/my-branch-for-file.js`).
.git

# GitHub Checks
checks/*.json

# Ignore gRPC generated code
open/server/grpc/generated

# Files that are often a target of fleetshifts, which don't know our
# style rules. So it makes sense to avoid formatting of these files.
kubernetes/
deployment-info.yaml
build-info.yaml
service-info.yaml
open/service-info/

# S/CSS TS definition files generated by webpack (css-modules-typescript-loader)
*.scss.d.ts
*.css.d.ts

bazel-dist/

# Ignore config files that are downloaded during tingle build pipeline (e.g. gcloud credential files)
.config/

# Ignore "minified" static HTML files
open/static-files-nginx/4*.html

# Ignore temporary log files for local build metrics
.buildmetrics/

# The YAML files in here can be Jinja templates, even though they end in .yaml
buildconf/monitoring/
